<?xml version="1.0"?>
<sdf version='1.4'>
  <model name='surus_sim'>
    <pose>0 0 0.1 0 -0 0</pose>
    <link name='base_link'>
      <pose>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>-0.167968 -1.01022e-05 0.286322 0 -0 0</pose>
        <mass>4.66238</mass>
        <inertia>
          <ixx>0.231101</ixx>
          <ixy>5.93061e-07</ixy>
          <ixz>-0.0455737</ixz>
          <iyy>0.23721</iyy>
          <iyz>-3.48067e-07</iyz>
          <izz>0.292611</izz>
        </inertia>
      </inertial>
      <collision name='base_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='base_link_visual'>
        <pose>-0.009 0 0.12395 0 0 -1.57</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/base_link/base_link.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <link name='Upper_link'>
      <pose>-0.464434 0 0.541527 0 -0 0</pose>
      <inertial>
        <pose>0.434119 -0.00204589 -0.12842 0 -0 0</pose>
        <mass>6.26525</mass>
        <inertia>
          <ixx>0.236893</ixx>
          <ixy>0.000377252</ixy>
          <ixz>-0.102109</ixz>
          <iyy>0.387112</iyy>
          <iyz>0.000225772</iyz>
          <izz>0.405303</izz>
        </inertia>
      </inertial>
      <collision name='Upper_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/Upper_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='Upper_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/Upper_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='Upper_joint' type='revolute'>
      <child>Upper_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_top_actuator_link'>
      <pose>0.15964 0.235141 0.572911 -4.76034e-15 -0.815499 6.53832e-15</pose>
      <inertial>
        <pose>-0.255752 -0.0103505 1.43316e-09 0 -0 0</pose>
        <mass>0.132261</mass>
        <inertia>
          <ixx>5.36519e-06</ixx>
          <ixy>2.2613e-11</ixy>
          <ixz>4.07087e-11</ixz>
          <iyy>0.00312813</iyy>
          <iyz>3.59323e-13</iyz>
          <izz>0.00312812</izz>
        </inertia>
      </inertial>
      <collision name='left_top_actuator_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_top_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_top_actuator_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_top_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_top_actuator_joint' type='revolute'>
      <child>left_top_actuator_link</child>
      <parent>Upper_link</parent>
      <axis>
        <xyz>-3.07247e-15 1 -3.26324e-15</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_bot_actuator_link'>
      <pose>-0.22342 0.22479 0.166067 -4.76034e-15 -0.815499 6.53832e-15</pose>
      <inertial>
        <pose>0.125725 -1.11022e-16 0.0156626 0 -0 0</pose>
        <mass>0.310659</mass>
        <inertia>
          <ixx>0.000171136</ixx>
          <ixy>4.58714e-18</ixy>
          <ixz>-0.000505501</ixz>
          <iyy>0.00791442</iyy>
          <iyz>-1.03973e-18</iyz>
          <izz>0.00780787</izz>
        </inertia>
      </inertial>
      <collision name='left_bot_actuator_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_bot_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_bot_actuator_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_bot_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>

    <link name='right_top_actuator_link'>
      <pose>0.159636 -0.23964 0.572911 -4.9262e-15 -0.8155 6.7662e-15</pose>
      <inertial>
        <pose>-0.255752 0.0148463 1.43317e-09 0 -0 0</pose>
        <mass>0.132261</mass>
        <inertia>
          <ixx>5.36519e-06</ixx>
          <ixy>2.2613e-11</ixy>
          <ixz>4.07087e-11</ixz>
          <iyy>0.00312813</iyy>
          <iyz>3.59323e-13</iyz>
          <izz>0.00312812</izz>
        </inertia>
      </inertial>
      <collision name='right_top_actuator_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_top_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_top_actuator_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_top_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_top_actuator_joint' type='revolute'>
      <child>right_top_actuator_link</child>
      <parent>Upper_link</parent>
      <axis>
        <xyz>3.17959e-15 -1 3.37693e-15</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_bot_actuator_link'>
      <pose>-0.223424 -0.224794 0.166066 -4.9262e-15 -0.8155 6.7662e-15</pose>
      <inertial>
        <pose>0.125725 -2.22045e-16 0.0156626 0 -0 0</pose>
        <mass>0.310659</mass>
        <inertia>
          <ixx>0.000171136</ixx>
          <ixy>4.92663e-18</ixy>
          <ixz>-0.000505501</ixz>
          <iyy>0.00791442</iyy>
          <iyz>-1.08263e-18</iyz>
          <izz>0.00780787</izz>
        </inertia>
      </inertial>
      <collision name='right_bot_actuator_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_bot_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_bot_actuator_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_bot_actuator_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>

    <link name='left_bot_link'>
      <pose>0.178622 0.220653 0.138937 0 -0 0</pose>
      <inertial>
        <pose>9.00499e-05 -0.00161427 -1.19744e-06 0 -0 0</pose>
        <mass>0.426568</mass>
        <inertia>
          <ixx>3.67121e-05</ixx>
          <ixy>1.18237e-07</ixy>
          <ixz>-1.50093e-07</ixz>
          <iyy>0.00497472</iyy>
          <iyz>-7.97879e-09</iyz>
          <izz>0.00497294</izz>
        </inertia>
      </inertial>
      <collision name='left_bot_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_bot_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_bot_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_bot_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_bot_joint' type='revolute'>
      <child>left_bot_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_back_bot_vert_link'>
      <pose>0.000821979 0.223828 0.138937 0 -0 0</pose>
      <inertial>
        <pose>-0.00013262 0.0424003 -0.0570634 0 -0 0</pose>
        <mass>0.322841</mass>
        <inertia>
          <ixx>0.00203846</ixx>
          <ixy>4.73525e-07</ixy>
          <ixz>-6.10924e-07</ixz>
          <iyy>0.00130531</iyy>
          <iyz>-0.000769744</iyz>
          <izz>0.000788193</izz>
        </inertia>
      </inertial>
      <collision name='left_back_bot_vert_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_back_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_back_bot_vert_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_back_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_back_bot_vert_joint' type='revolute'>
      <child>left_back_bot_vert_link</child>
      <parent>left_bot_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_mid_wheel_link'>
      <pose>0.000821979 0.354472 -8.65793e-07 0 -0 0</pose>
      <inertial>
        <pose>-4.16334e-16 -0.0425331 1.11022e-16 0 -0 0</pose>
        <mass>0.828511</mass>
        <inertia>
          <ixx>0.00513965</ixx>
          <ixy>-1.08088e-18</ixy>
          <ixz>-1.58047e-18</ixz>
          <iyy>0.00677496</iyy>
          <iyz>4.25447e-17</iyz>
          <izz>0.00513965</izz>
        </inertia>
      </inertial>
      <collision name='left_mid_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_mid_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='left_mid_wheel_link_visual'>
        <pose>0 -0.127 0 -1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_mid_wheel_joint' type='revolute'>
      <child>left_mid_wheel_link</child>
      <parent>left_back_bot_vert_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_front_bot_vert_link'>
      <pose>0.356422 0.219065 0.138937 0 -0 0</pose>
      <inertial>
        <pose>8.02677e-05 0.022582 -0.0335519 0 -0 0</pose>
        <mass>0.224204</mass>
        <inertia>
          <ixx>0.00105907</ixx>
          <ixy>7.11787e-07</ixy>
          <ixz>-1.88805e-06</ixz>
          <iyy>0.000827713</iyy>
          <iyz>-0.000297527</iyz>
          <izz>0.000269868</izz>
        </inertia>
      </inertial>
      <collision name='left_front_bot_vert_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_front_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_front_bot_vert_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_front_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_front_bot_vert_joint' type='revolute'>
      <child>left_front_bot_vert_link</child>
      <parent>left_bot_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_front_wheel_link'>
      <pose>0.356879 0.354453 9.99201e-16 0 -0 0</pose>
      <inertial>
        <pose>-2.66454e-15 -0.0425331 2.22045e-16 0 -0 0</pose>
        <mass>0.828511</mass>
        <inertia>
          <ixx>0.00513965</ixx>
          <ixy>-5.52186e-17</ixy>
          <ixz>-1.53794e-18</ixz>
          <iyy>0.00677496</iyy>
          <iyz>3.97175e-17</iyz>
          <izz>0.00513965</izz>
        </inertia>
      </inertial>
      <collision name='left_front_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_front_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='left_front_wheel_link_visual'>
        <pose>0 -0.127 0 -1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_front_wheel_joint' type='revolute'>
      <child>left_front_wheel_link</child>
      <parent>left_front_bot_vert_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='left_top_link'>
      <pose>0.17844 0.220653 0.215137 0 -0 0</pose>
      <inertial>
        <pose>9.83237e-06 -0.00158431 -1.36956e-10 0 -0 0</pose>
        <mass>0.219609</mass>
        <inertia>
          <ixx>1.20446e-05</ixx>
          <ixy>1.44907e-08</ixy>
          <ixz>3.22033e-12</ixz>
          <iyy>0.00271459</iyy>
          <iyz>-2.51895e-13</iyz>
          <izz>0.00271781</izz>
        </inertia>
      </inertial>
      <collision name='left_top_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_top_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='left_top_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/left_top_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='left_top_joint' type='revolute'>
      <child>left_top_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='rear_rocker_link'>
      <pose>-0.313685 0 0.138937 0 -0 0</pose>
      <inertial>
        <pose>-0.0254567 -0.000226881 -0.0380072 0 -0 0</pose>
        <mass>0.687175</mass>
        <inertia>
          <ixx>0.0307555</ixx>
          <ixy>-3.18928e-07</ixy>
          <ixz>-1.47386e-06</ixz>
          <iyy>0.00146499</iyy>
          <iyz>1.57358e-05</iyz>
          <izz>0.0294034</izz>
        </inertia>
      </inertial>
      <collision name='rear_rocker_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/rear_rocker_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='rear_rocker_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/rear_rocker_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='rear_rocker_joint' type='revolute'>
      <child>rear_rocker_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>-1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='bl_wheel_link'>
      <pose>-0.33896 0.353963 -9.14691e-07 0 -0 0</pose>
      <inertial>
        <pose>-0.00136638 -0.0465836 -0.00171088 0 -0 0</pose>
        <mass>0.891963</mass>
        <inertia>
          <ixx>0.00566212</ixx>
          <ixy>1.48127e-05</ixy>
          <ixz>8.85271e-05</ixz>
          <iyy>0.00723242</iyy>
          <iyz>1.85474e-05</iyz>
          <izz>0.00562197</izz>
        </inertia>
      </inertial>
      <collision name='bl_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/bl_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <!--
      <visual name='bl_wheel_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/bl_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </visual> -->
      <visual name='bl_wheel_link_visual'>
        <pose>0 -0.127 0 -1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='bl_wheel_joint' type='revolute'>
      <child>bl_wheel_link</child>
      <parent>rear_rocker_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='br_wheel_link'>
      <pose>-0.33921 -0.353963 -9.14691e-07 0 -0 0</pose>
      <inertial>
        <pose>0.000527219 0.0465836 0.00212512 0 -0 0</pose>
        <mass>0.891963</mass>
        <inertia>
          <ixx>0.00572229</ixx>
          <ixy>5.71552e-06</ixy>
          <ixz>4.24288e-05</ixz>
          <iyy>0.00723242</iyy>
          <iyz>2.30382e-05</iyz>
          <izz>0.0055618</izz>
        </inertia>
      </inertial>
      <collision name='br_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/br_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='br_wheel_link_visual'>
        <pose>0 0.127 0 1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='br_wheel_joint' type='revolute'>
      <child>br_wheel_link</child>
      <parent>rear_rocker_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_bot_link'>
      <pose>0.178257 -0.220672 0.138937 0 -0 0</pose>
      <inertial>
        <pose>-8.86457e-05 0.00148572 -1.17876e-06 0 -0 0</pose>
        <mass>0.433326</mass>
        <inertia>
          <ixx>3.73719e-05</ixx>
          <ixy>1.13299e-07</ixy>
          <ixz>1.50094e-07</ixz>
          <iyy>0.00497497</iyy>
          <iyz>7.91312e-09</iyz>
          <izz>0.0049736</izz>
        </inertia>
      </inertial>
      <collision name='right_bot_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_bot_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_bot_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_bot_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_bot_joint' type='revolute'>
      <child>right_bot_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_back_bot_vert_link'>
      <pose>0.000457386 -0.214322 0.138937 0 -0 0</pose>
      <inertial>
        <pose>-0.000145011 -0.0519053 -0.057063 0 -0 0</pose>
        <mass>0.322841</mass>
        <inertia>
          <ixx>0.00203846</ixx>
          <ixy>2.07715e-06</ixy>
          <ixz>3.21564e-06</ixz>
          <iyy>0.00130531</iyy>
          <iyz>0.000769742</iyz>
          <izz>0.000788201</izz>
        </inertia>
      </inertial>
      <collision name='right_back_bot_vert_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_back_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_back_bot_vert_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_back_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_back_bot_vert_joint' type='revolute'>
      <child>right_back_bot_vert_link</child>
      <parent>right_bot_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_middle_wheel_link'>
      <pose>3.41432e-15 -0.354472 -9.99201e-16 0 -0 0</pose>
      <inertial>
        <pose>7.49401e-16 0.0425331 5.55112e-16 0 -0 0</pose>
        <mass>0.828511</mass>
        <inertia>
          <ixx>0.00513965</ixx>
          <ixy>-7.37519e-18</ixy>
          <ixz>1.6616e-18</ixz>
          <iyy>0.00677496</iyy>
          <iyz>-5.16417e-17</iyz>
          <izz>0.00513965</izz>
        </inertia>
      </inertial>
      <collision name='right_middle_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_middle_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='right_middle_wheel_link_visual'>
        <pose>0 0.127 0 1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_middle_wheel_joint' type='revolute'>
      <child>right_middle_wheel_link</child>
      <parent>right_back_bot_vert_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_front_bot_vert_link'>
      <pose>0.356216 -0.214342 0.138937 0 -0 0</pose>
      <inertial>
        <pose>-2.61293e-05 -0.0519053 -0.0570632 0 -0 0</pose>
        <mass>0.322841</mass>
        <inertia>
          <ixx>0.00203846</ixx>
          <ixy>4.73525e-07</ixy>
          <ixz>6.10924e-07</ixz>
          <iyy>0.00130531</iyy>
          <iyz>0.000769744</iyz>
          <izz>0.000788193</izz>
        </inertia>
      </inertial>
      <collision name='right_front_bot_vert_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_front_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_front_bot_vert_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_front_bot_vert_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_front_bot_vert_joint' type='revolute'>
      <child>right_front_bot_vert_link</child>
      <parent>right_bot_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_front_wheel_link'>
      <pose>0.356048 -0.354492 -6.51374e-07 0 -0 0</pose>
      <inertial>
        <pose>1.22125e-15 0.0425331 -4.44089e-16 0 -0 0</pose>
        <mass>0.828511</mass>
        <inertia>
          <ixx>0.00513965</ixx>
          <ixy>-3.5509e-17</ixy>
          <ixz>-1.11633e-18</ixz>
          <iyy>0.00677496</iyy>
          <iyz>-2.97655e-17</iyz>
          <izz>0.00513965</izz>
        </inertia>
      </inertial>
      <collision name='right_front_wheel_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_front_wheel_link.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name='right_front_wheel_link_visual'>
        <pose>0 0.127 0 1.57 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/visual_meshes/left_wheels/left_wheel.DAE</uri>
          </mesh>
        </geometry>
      </visual>

      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_front_wheel_joint' type='revolute'>
      <child>right_front_wheel_link</child>
      <parent>right_front_bot_vert_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>
    <link name='right_top_link'>
      <pose>0.17844 -0.220672 0.215137 0 -0 0</pose>
      <inertial>
        <pose>-1.00375e-05 0.00141868 -1.39813e-10 0 -0 0</pose>
        <mass>0.215122</mass>
        <inertia>
          <ixx>1.16606e-05</ixx>
          <ixy>1.41331e-08</ixy>
          <ixz>-3.22034e-12</ixz>
          <iyy>0.0027145</iyy>
          <iyz>2.46913e-13</iyz>
          <izz>0.00271743</izz>
        </inertia>
      </inertial>
      <collision name='right_top_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_top_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_top_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/right_top_link.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
    </link>
    <joint name='right_top_joint' type='revolute'>
      <child>right_top_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 -1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>


<!-- prismatic joints for left and right actuators -->

    <joint name='right_mid_actuator_joint' type='prismatic'>
      <child>right_bot_actuator_link</child>
      <parent>right_top_actuator_link</parent>
      <axis>
        <xyz>-0.685504 -4.63826e-15 -0.728068</xyz>
        <limit>
          <lower>0</lower>
          <upper>0.4572</upper>
          <effort>100</effort>
          <velocity>0.1</velocity>
        </limit>
        <dynamics/>
      </axis>
    </joint>

    <joint name='left_mid_actuator_joint' type='prismatic'>
      <child>left_bot_actuator_link</child>
      <parent>left_top_actuator_link</parent>
      <axis>
        <xyz>-0.685505 -4.48206e-15 -0.728068</xyz>
        <limit>
          <lower>0</lower>
          <upper>0.4572</upper>
          <effort>100</effort>
          <velocity>0.1</velocity>
        </limit>
        <dynamics/>
      </axis>
    </joint>

<!-- revolute joints for left and right actuator attachment back to base_link -->

    <joint name='left_actuator_bot_joint' type='revolute'>
      <child>base_link</child>
      <parent>left_bot_actuator_link</parent>
      <pose>-0.250185 0.21589 0.138937 0 -0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

    <joint name='right_actuator_bot_joint' type='revolute'>
      <child>base_link</child>
      <parent>right_bot_actuator_link</parent>
      <pose>-0.250185 -0.21589 0.138937 0 -0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

<!-- Four bar linkage manual joints to complete graph stucture as urdf exporter wont handle graph models -->

    <joint name='left_front_top_vert_joint' type='revolute'>
      <child>left_front_bot_vert_link</child>
      <parent>left_top_link</parent>
      <pose>0 0 0.077472 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

    <joint name='left_back_top_vert_joint' type='revolute'>
      <child>left_back_bot_vert_link</child>
      <parent>left_top_link</parent>
      <pose>0 0 0.077472 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

    <joint name='right_front_top_vert_joint' type='revolute'>
      <child>right_front_bot_vert_link</child>
      <parent>right_top_link</parent>
      <pose>0 0 0.077472 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

    <joint name='right_back_top_vert_joint' type='revolute'>
      <child>right_back_bot_vert_link</child>
      <parent>right_top_link</parent>
      <pose>0 0 0.077472 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics/>
      </axis>
    </joint>

<!-- End of manually entered joints -->



<!-- Plugins -->

    <plugin name="hector_6w_diff_controller" filename="libdiffdrive_plugin_6w.so">
        <alwaysOn>1</alwaysOn>
        <updateRate>20.0</updateRate>
        <wheelSeparation>0.5116</wheelSeparation>
        <wheelDiameter>0.2191</wheelDiameter>
        <!-- <torque>0.6</torque> -->
        <torque>20</torque>
        <frontLeftJoint>left_front_wheel_joint</frontLeftJoint>
        <frontRightJoint>right_front_wheel_joint</frontRightJoint>
        <midLeftJoint>left_mid_wheel_joint</midLeftJoint>
        <midRightJoint>right_middle_wheel_joint</midRightJoint>
        <rearLeftJoint>bl_wheel_joint</rearLeftJoint>
        <rearRightJoint>br_wheel_joint</rearRightJoint>
    </plugin>



<!-- end of blackfly camera -->

    <link name='blackfly_mount_link'>
      <pose>-0.45 -0.223828 0.70 0 0 3.14159</pose>
      <inertial>
        <mass>1e-5</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0.0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
      <collision name='blackfly_mount_link_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
           <box>
             <size> 0.05 0.05 0.05 </size>
           </box>
        </geometry>
      </collision>
      <visual name='blackfly_mount_link_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
           <box>
             <size> 0.05 0.05 0.05 </size>
           </box>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
      <sensor name='blackfly_camera' type='camera'>
        <update_rate>20</update_rate>
	<pose>0 0 0 0 0 0</pose>
        <camera name="head">
          <horizontal_fov>1.2217</horizontal_fov>
          <image>
            <width>1624</width>
            <height>1224</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.01</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.000</stddev>
           </noise>
          </camera>
          <pose>0 0 0 0 0 0</pose>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>blackfly</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>blackfly_mount_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
      </sensor>
    </link>

    <joint name="blackfly_mount_joint" type="revolute">
      <parent>base_link</parent>
      <child>blackfly_mount_link</child>
      <pose>0 0 0 0 0 3.14159</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-2.618</lower>
          <upper>2.618</upper>
        </limit>
      </axis>
    </joint>

    <link name='blackfly_optical_link'>
      <pose>-0.475 -0.223828 0.70 -1.57 0 1.57</pose>
      <inertial>
        <mass>1e-5</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0.0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="blackfly_optical_joint" type="revolute">
      <parent>blackfly_mount_link</parent>
      <child>blackfly_optical_link</child>
      <pose>0 0 0 -1.57 0 1.57</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
      </axis>
    </joint>
<!-- end of blackfly camera -->



    <link name='imu'>
      <pose>0 0 0.15 0 0 0</pose>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>1e-5</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0.0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
      <collision name='imu_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
           <box>
             <size> 0.07 0.05 0.03 </size>
           </box>
        </geometry>
      </collision>
      <visual name='imu_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
           <box>
             <size> 0.07 0.05 0.03 </size>
           </box>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Red</name>
          </script>
        </material>
      </visual>
      <visual name='imu_visual_forward_point'>
        <pose>0.03 0 0.03 0 0 0</pose>
        <geometry>
           <box>
             <size> 0.02 0.02 0.02 </size>
           </box>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>

    <joint name='imu_joint' type='revolute'>
        <child>imu</child>
        <parent>base_link</parent>
        <pose>0 0 0 0 0 0</pose>
        <axis>
             <xyz>0 0 1</xyz>
            <limit>
               <lower>0</lower>
               <upper>0</upper>
            </limit>
        </axis>
    </joint>

    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>/</robotNamespace>
        <updateRate>100.0</updateRate>
        <bodyName>imu</bodyName>
        <topicName>imu/data</topicName>
        <rpyOffset>0 0 0</rpyOffset>
        <accelDrift>0.0000005 0.0000005 0.0000005</accelDrift>
        <accelGaussianNoise>0.0000005 0.0000005 0.0000005</accelGaussianNoise>
        <rateDrift>0 0 0</rateDrift>
        <rateGaussianNoise>0.0000005 0.0000005 0.0000005</rateGaussianNoise>
        <headingDrift>0.0000005</headingDrift>
        <headingGaussianNoise>0.0000005</headingGaussianNoise>
    </plugin>


    <link name='kinect_mount_link'>
      <pose>-0.313685 0 0.40 0.8 0 -1.57</pose>
      <inertial>
        <mass>1e-5</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0.0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
      <collision name='kinect_mount_link_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/sensors/kinect.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='kinect_mount_link_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://surus_sim/meshes/sensors/kinect.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <gravity>1</gravity>
      <velocity_decay>
         <linear>0</linear>
         <angular>0</angular>
      </velocity_decay>
      <self_collide>0</self_collide>

      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <pose>0 0 0 0 0 -1.57</pose>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>20</updateRate>
          <imageTopicName>rgb/image_rect_color</imageTopicName>
          <depthImageTopicName>depth_registered/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth_registered/camera_info</depthImageCameraInfoTopicName>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <pointCloudCutoffMax>5.0</pointCloudCutoffMax>
          <frameName>camera_link</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
        </plugin>
      </sensor>
   </link>

    <joint name="kinect_mount_joint" type="revolute">
      <parent>base_link</parent>
      <child>kinect_mount_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
        </limit>
      </axis>
    </joint>

  <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
    <frameName>world</frameName>
    <bodyName>base_link</bodyName>
    <topicName>odometry/ground_truth</topicName>
    <updateRate>30.0</updateRate>
  </plugin>
<!--
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
	 <robotNamespace>/</robotNamespace>
	 <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>
-->
  <plugin name="gazebo_ros_servo" filename="libgazebo_ros_servo.so">
    <updateRate>30</updateRate>
    <cameraFrameName>blackfly_mount_link</cameraFrameName>
    <robotBaseFrameName>base_link</robotBaseFrameName>
    <cameraJointName>blackfly_mount_joint</cameraJointName>
    <rotatingVelocity>3.0</rotatingVelocity>
    <maxForceNewtonMeters>20</maxForceNewtonMeters>
  </plugin>

</model>
</sdf>
